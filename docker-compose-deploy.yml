
services:
  app:
    container_name: app
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web/static
      - media-data:/vol/web/media
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:13-alpine
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    container_name: proxy
    build:
      context: ./proxy
    restart: always 
    depends_on:
      - app
    ports:
      - 80:8000
    volumes:
      - static-data:/vol/static
      - media-data:/vol/media

volumes:
  db-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/db
      o: bind
  static-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/static
      o: bind
  media-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/static/media
      o: bind