
services:
  app:
    container_name: app
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=tomate
      - DEBUG=1
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:13-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=tomate

  # adminer:
  #   container_name: adminer
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080

volumes:
  db-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/db
      o: bind
  static-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/static
      o: bind